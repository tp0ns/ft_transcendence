version: "3"
services:
  pong-traefik:
    image: traefik:latest
    container_name: traefik
    command:
      # uncomment following commands for debugging !
      # - "--log.level=DEBUG"
      # - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8080"
    ports:
      # Change this to a value above 100 for correction
      # - 80:80
      - 8080:8080
    volumes:
      - ${DOCKER_SOCK}:/var/run/docker.sock:ro
    networks:
      - front_back

  pong-frontend:
    build: ./frontend
    container_name: frontend
    volumes:
      - ./frontend/:/frontend/:cached
    networks:
      - front_back
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=ft_transcendence_front_back"
      - "traefik.http.routers.pong-frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.pong-frontend.entrypoints=web"
      - "traefik.http.services.pong-frontend.loadbalancer.server.port=3001"

  pong-backend:
    build: ./backend
    container_name: backend
    volumes:
      - ./backend/:/backend/:cached
    env_file:
      - .env
    networks:
      - back_db
      - front_back
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=ft_transcendence_front_back"
      - "traefik.http.routers.pong-backend.entrypoints=web"
      - "traefik.http.services.pong-backend.loadbalancer.server.port=3000"
      - "traefik.http.routers.pong-backend.rule=Host(`localhost`) && PathPrefix(`/backend`, `/socket.io`, `/uploads`)"

  pong-db:
    image: postgres:alpine
    container_name: db
    env_file:
      - .env
    networks:
      - back_db
    volumes:
      - ${PRIVATE_PATH_DB}:/var/lib/postgresql/:cached

  pong-dev:
    image: dpage/pgadmin4
    profiles:
      - dev
    container_name: dev
    volumes:
      - ${PRIVATE_PATH_DEV}:/var/lib/pgadmin:cached
    ports:
      - "5050:80"
    env_file:
      - .env
    networks:
      - back_db

networks:
  front_back:
  back_db:
